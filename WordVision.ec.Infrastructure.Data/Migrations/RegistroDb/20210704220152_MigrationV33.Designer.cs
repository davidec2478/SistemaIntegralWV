// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WordVision.ec.Infrastructure.Data.Contexts;

namespace WordVision.ec.Infrastructure.Data.Migrations.RegistroDb
{
    [DbContext(typeof(RegistroDbContext))]
    [Migration("20210704220152_MigrationV33")]
    partial class MigrationV33
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AspNetCoreHero.EntityFrameworkCore.AuditTrail.Models.Audit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AffectedColumns")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("NewValues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldValues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TableName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AuditLogs");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Maestro.Catalogo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("Catalogos", "adm");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Maestro.Ciudad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<int>("IdProvincia")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("IdProvincia");

                    b.ToTable("Ciudades", "adm");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Maestro.DetalleCatalogo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<int>("IdCatalogo")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Secuencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdCatalogo");

                    b.ToTable("DetalleCatalogos", "adm");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Maestro.Empresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Contacto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaginaWeb")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Pais")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Empresas", "adm");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Maestro.Estructura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Designacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<int>("IdEmpresa")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("ReportaID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdEmpresa");

                    b.ToTable("Estructuras", "adm");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Maestro.Pais", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("Paises", "adm");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Maestro.Provincia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<int>("IdPais")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("Region")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdPais");

                    b.ToTable("Provincias", "adm");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Planificacion.Actividad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescripcionActividad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Entregable")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdCargoResponsable")
                        .HasColumnType("int");

                    b.Property<int>("IdIndicadorPOA")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Plazo")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Ponderacion")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Saldo")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TechoPresupuestoCC")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("IdIndicadorPOA");

                    b.ToTable("Actividades", "planifica");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Planificacion.EstrategiaNacional", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("IdEmpresa")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("MetaNacional")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetaRegional")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("EstrategiaNacionales", "planifica");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Planificacion.FactorCriticoExito", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("FactorCritico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdObjetivoEstra")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdObjetivoEstra");

                    b.ToTable("FactorCriticoExitos", "planifica");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Planificacion.Gestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Anio")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Estado")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("IdEstrategia")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdEstrategia");

                    b.ToTable("Gestiones", "planifica");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Planificacion.IndicadorAF", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Anio")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Entregable")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdIndicadorEstrategico")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Meta")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("IdIndicadorEstrategico");

                    b.ToTable("IndicadorAFs", "planifica");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Planificacion.IndicadorEstrategico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("EntregableAnual")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdFactorCritico")
                        .HasColumnType("int");

                    b.Property<int?>("IdProducto")
                        .HasColumnType("int");

                    b.Property<string>("IndicadorResultado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("LineaBase")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("MedioVerificacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Meta")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Responsable")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("UnidadMedida")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdFactorCritico");

                    b.HasIndex("IdProducto");

                    b.ToTable("IndicadorEstrategicos", "planifica");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Planificacion.IndicadorPOA", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.Property<string>("IndicadorProducto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("LineaBase")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("MedioVerificacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Meta")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ProductosId")
                        .HasColumnType("int");

                    b.Property<int?>("Responsable")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("UnidadMedida")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductosId");

                    b.ToTable("IndicadorPOAs", "planifica");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Planificacion.Meta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Abril")
                        .HasColumnType("bit");

                    b.Property<bool?>("Agosto")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Diciembre")
                        .HasColumnType("bit");

                    b.Property<bool?>("Enero")
                        .HasColumnType("bit");

                    b.Property<bool?>("Febrero")
                        .HasColumnType("bit");

                    b.Property<bool?>("Julio")
                        .HasColumnType("bit");

                    b.Property<bool?>("Junio")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Marzo")
                        .HasColumnType("bit");

                    b.Property<bool?>("Mayo")
                        .HasColumnType("bit");

                    b.Property<bool?>("Noviembre")
                        .HasColumnType("bit");

                    b.Property<int>("NumMeses")
                        .HasColumnType("int");

                    b.Property<bool?>("Octubre")
                        .HasColumnType("bit");

                    b.Property<bool?>("Septiembre")
                        .HasColumnType("bit");

                    b.Property<int>("TipoMedida")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Metas", "planifica");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Planificacion.ObjetivoEstrategico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AreaPrioridad")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("CargoResponsable")
                        .HasColumnType("int");

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Cwbo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dimension")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("IdEstrategia")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Programa")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdEstrategia");

                    b.ToTable("ObjetivoEstrategicos", "planifica");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Planificacion.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescProducto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdCargoResponsable")
                        .HasColumnType("int");

                    b.Property<string>("IdCategoria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdIndicadorEstrategico")
                        .HasColumnType("int");

                    b.Property<int>("IdObjetivoEstra")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ObjetivoEstrategicosId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ObjetivoEstrategicosId");

                    b.ToTable("Productos", "planifica");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Presupuesto.DatosLDR", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AnioIngreso")
                        .HasColumnType("int");

                    b.Property<string>("Area")
                        .HasMaxLength(550)
                        .HasColumnType("nvarchar(550)");

                    b.Property<string>("Cargo")
                        .HasMaxLength(550)
                        .HasColumnType("nvarchar(550)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("FijoEventual")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Identificacion")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Ldr")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("MesIngreso")
                        .HasColumnType("int");

                    b.Property<string>("Nombres")
                        .HasMaxLength(550)
                        .HasColumnType("nvarchar(550)");

                    b.Property<decimal>("PorceImputado")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("T0")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("T1")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("T2")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("T3")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("T4")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("T5")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("T6")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("T7")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("T8")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("T9")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<decimal>("TotalGasto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Ubicacion")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<decimal>("ValorImputado")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("DatosLDRs", "pres");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Presupuesto.DatosT5", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Cuentasop")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("DescripcionT2")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("T2")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DatosT5s", "pres");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Presupuesto.Presupuesto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AnioIngreso")
                        .HasColumnType("int");

                    b.Property<decimal>("Cantidad")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescripcionT5")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Mes")
                        .HasColumnType("int");

                    b.Property<int>("MesIngreso")
                        .HasColumnType("int");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("T5")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoCargo")
                        .HasColumnType("int");

                    b.Property<int>("TodoAnio")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Presupuestos", "pres");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Registro.Colaborador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alias")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ApellidoMaterno")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Area")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("IdEstructura")
                        .HasColumnType("int");

                    b.Property<string>("Identificacion")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LugarTrabajo")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("PrimerNombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("SegundoNombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("IdEstructura");

                    b.ToTable("Colaboradores");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Registro.Documento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescripcionAcepto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(1500)
                        .HasColumnType("nvarchar(1500)");

                    b.HasKey("Id");

                    b.ToTable("Documentos");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Registro.Firma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdColaborador")
                        .HasColumnType("int");

                    b.Property<int>("IdDocumento")
                        .HasColumnType("int");

                    b.Property<byte[]>("Image")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdColaborador");

                    b.ToTable("Firmas");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Registro.Formulario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alergias")
                        .HasMaxLength(1500)
                        .HasColumnType("nvarchar(1500)");

                    b.Property<string>("CalleResidencia")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CalleSecundariaResidencia")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CedulaExtranjero")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Celular")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CiudadResidencia")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CiudadaniaExtranjero")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CodigoArea")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreenciaReligiosa")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("CuentaBancaria")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("DiscapacidadSN")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("DobleCiudadaniaSN")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("EstadoCivil")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Etnia")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("FamiliaDiscapacidad")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FamiliaDiscapacidadRelacion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FamiliaDiscapacidadSN")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("FamiliaPorcentajeDiscapacidad")
                        .HasColumnType("int");

                    b.Property<string>("FamiliaTipoDiscapacidad")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("FormacionAcademica")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("IdColaborador")
                        .HasColumnType("int");

                    b.Property<string>("Idioma")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Iglesia")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("InfoResidencia")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nacionalidad")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NumCasaResidencia")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PaisCiudadania")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PaisResidencia")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("Pdf")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("PorcentajeDiscapacidad")
                        .HasColumnType("int");

                    b.Property<int>("PorcentajeEscrito")
                        .HasColumnType("int");

                    b.Property<int>("PorcentajeHablado")
                        .HasColumnType("int");

                    b.Property<string>("Preexistencia")
                        .HasMaxLength(1500)
                        .HasColumnType("nvarchar(1500)");

                    b.Property<string>("ProvinciaResidencia")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ReferenciaResidencia")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SectorResidencia")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TipoDiscapacidad")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TipoSangre")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<DateTime?>("VigenciaDesde")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("VigenciaHasta")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdColaborador");

                    b.ToTable("Formularios");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Registro.FormularioTercero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("IdFormulario")
                        .HasColumnType("int");

                    b.Property<int?>("IdTecero")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("Id");

                    b.HasIndex("IdFormulario");

                    b.HasIndex("IdTecero");

                    b.ToTable("FormularioTercero");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Registro.Idioma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Escrito")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Hablado")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("IdFormulario")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("IdFormulario");

                    b.ToTable("Idiomas");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Registro.Pregunta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescripcionAcepto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescripcionUrl1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescripcionUrl2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("IdDocumento")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("NumPregunta")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(1500)
                        .HasColumnType("nvarchar(1500)");

                    b.Property<string>("Url1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdDocumento");

                    b.ToTable("Preguntas");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Registro.Respuesta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescRespuesta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdColaborador")
                        .HasColumnType("int");

                    b.Property<int>("IdDocumento")
                        .HasColumnType("int");

                    b.Property<int>("IdPregunta")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdColaborador");

                    b.ToTable("Respuestas");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Registro.Tercero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Celular")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CodigoArea")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime?>("FecNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Genero")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Identificacion")
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("PrimerApellido")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("PrimerNombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("SegundoApellido")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("SegundoNombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<DateTime?>("VigDesde")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("VigHasta")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Tercero");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Maestro.Ciudad", b =>
                {
                    b.HasOne("WordVision.ec.Domain.Entities.Maestro.Provincia", "Provincias")
                        .WithMany("Ciudades")
                        .HasForeignKey("IdProvincia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Provincias");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Maestro.DetalleCatalogo", b =>
                {
                    b.HasOne("WordVision.ec.Domain.Entities.Maestro.Catalogo", "Catalogos")
                        .WithMany("DetalleCatalogos")
                        .HasForeignKey("IdCatalogo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Catalogos");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Maestro.Estructura", b =>
                {
                    b.HasOne("WordVision.ec.Domain.Entities.Maestro.Empresa", "Empresas")
                        .WithMany("Estructuras")
                        .HasForeignKey("IdEmpresa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresas");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Maestro.Provincia", b =>
                {
                    b.HasOne("WordVision.ec.Domain.Entities.Maestro.Pais", "Paises")
                        .WithMany("Provincias")
                        .HasForeignKey("IdPais")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paises");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Planificacion.Actividad", b =>
                {
                    b.HasOne("WordVision.ec.Domain.Entities.Planificacion.IndicadorPOA", "IndicadorPOAs")
                        .WithMany("Actividades")
                        .HasForeignKey("IdIndicadorPOA")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IndicadorPOAs");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Planificacion.FactorCriticoExito", b =>
                {
                    b.HasOne("WordVision.ec.Domain.Entities.Planificacion.ObjetivoEstrategico", "ObjetivoEstrategicos")
                        .WithMany("FactorCriticoExitos")
                        .HasForeignKey("IdObjetivoEstra")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ObjetivoEstrategicos");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Planificacion.Gestion", b =>
                {
                    b.HasOne("WordVision.ec.Domain.Entities.Planificacion.EstrategiaNacional", "EstrategiaNacionales")
                        .WithMany("Gestiones")
                        .HasForeignKey("IdEstrategia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EstrategiaNacionales");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Planificacion.IndicadorAF", b =>
                {
                    b.HasOne("WordVision.ec.Domain.Entities.Planificacion.IndicadorEstrategico", "IndicadorEstrategicos")
                        .WithMany("IndicadorAFs")
                        .HasForeignKey("IdIndicadorEstrategico")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IndicadorEstrategicos");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Planificacion.IndicadorEstrategico", b =>
                {
                    b.HasOne("WordVision.ec.Domain.Entities.Planificacion.FactorCriticoExito", "FactorCriticoExitos")
                        .WithMany("IndicadorEstrategicos")
                        .HasForeignKey("IdFactorCritico")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WordVision.ec.Domain.Entities.Planificacion.Producto", null)
                        .WithMany("IndicadorEstrategicos")
                        .HasForeignKey("IdProducto");

                    b.Navigation("FactorCriticoExitos");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Planificacion.IndicadorPOA", b =>
                {
                    b.HasOne("WordVision.ec.Domain.Entities.Planificacion.Producto", "Productos")
                        .WithMany()
                        .HasForeignKey("ProductosId");

                    b.Navigation("Productos");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Planificacion.ObjetivoEstrategico", b =>
                {
                    b.HasOne("WordVision.ec.Domain.Entities.Planificacion.EstrategiaNacional", "EstrategiaNacionales")
                        .WithMany("ObjetivoEstrategicos")
                        .HasForeignKey("IdEstrategia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EstrategiaNacionales");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Planificacion.Producto", b =>
                {
                    b.HasOne("WordVision.ec.Domain.Entities.Planificacion.ObjetivoEstrategico", "ObjetivoEstrategicos")
                        .WithMany()
                        .HasForeignKey("ObjetivoEstrategicosId");

                    b.Navigation("ObjetivoEstrategicos");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Registro.Colaborador", b =>
                {
                    b.HasOne("WordVision.ec.Domain.Entities.Maestro.Estructura", null)
                        .WithMany("Colaboradores")
                        .HasForeignKey("IdEstructura")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Registro.Firma", b =>
                {
                    b.HasOne("WordVision.ec.Domain.Entities.Registro.Colaborador", "Colaboradores")
                        .WithMany("Firmas")
                        .HasForeignKey("IdColaborador")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Colaboradores");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Registro.Formulario", b =>
                {
                    b.HasOne("WordVision.ec.Domain.Entities.Registro.Colaborador", "Colaboradores")
                        .WithMany("Formularios")
                        .HasForeignKey("IdColaborador")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Colaboradores");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Registro.FormularioTercero", b =>
                {
                    b.HasOne("WordVision.ec.Domain.Entities.Registro.Formulario", "Formularios")
                        .WithMany("FormularioTerceros")
                        .HasForeignKey("IdFormulario");

                    b.HasOne("WordVision.ec.Domain.Entities.Registro.Tercero", "Terceros")
                        .WithMany("FormularioTerceros")
                        .HasForeignKey("IdTecero")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.Navigation("Formularios");

                    b.Navigation("Terceros");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Registro.Idioma", b =>
                {
                    b.HasOne("WordVision.ec.Domain.Entities.Registro.Formulario", "Formularios")
                        .WithMany("Idiomas")
                        .HasForeignKey("IdFormulario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Formularios");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Registro.Pregunta", b =>
                {
                    b.HasOne("WordVision.ec.Domain.Entities.Registro.Documento", "Documentos")
                        .WithMany("Preguntas")
                        .HasForeignKey("IdDocumento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Documentos");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Registro.Respuesta", b =>
                {
                    b.HasOne("WordVision.ec.Domain.Entities.Registro.Colaborador", "Colaboradores")
                        .WithMany("Respuestas")
                        .HasForeignKey("IdColaborador")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Colaboradores");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Maestro.Catalogo", b =>
                {
                    b.Navigation("DetalleCatalogos");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Maestro.Empresa", b =>
                {
                    b.Navigation("Estructuras");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Maestro.Estructura", b =>
                {
                    b.Navigation("Colaboradores");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Maestro.Pais", b =>
                {
                    b.Navigation("Provincias");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Maestro.Provincia", b =>
                {
                    b.Navigation("Ciudades");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Planificacion.EstrategiaNacional", b =>
                {
                    b.Navigation("Gestiones");

                    b.Navigation("ObjetivoEstrategicos");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Planificacion.FactorCriticoExito", b =>
                {
                    b.Navigation("IndicadorEstrategicos");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Planificacion.IndicadorEstrategico", b =>
                {
                    b.Navigation("IndicadorAFs");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Planificacion.IndicadorPOA", b =>
                {
                    b.Navigation("Actividades");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Planificacion.ObjetivoEstrategico", b =>
                {
                    b.Navigation("FactorCriticoExitos");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Planificacion.Producto", b =>
                {
                    b.Navigation("IndicadorEstrategicos");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Registro.Colaborador", b =>
                {
                    b.Navigation("Firmas");

                    b.Navigation("Formularios");

                    b.Navigation("Respuestas");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Registro.Documento", b =>
                {
                    b.Navigation("Preguntas");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Registro.Formulario", b =>
                {
                    b.Navigation("FormularioTerceros");

                    b.Navigation("Idiomas");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Registro.Tercero", b =>
                {
                    b.Navigation("FormularioTerceros");
                });
#pragma warning restore 612, 618
        }
    }
}
